skip = 1,
)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/")
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/"
quote="a")
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/",
quote="a")
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 1,
quote ="/"
)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T
)
v<-c(1,2,3,4,5,6,7,8)
v[0]
v[1]
v[4]
int <- matrix(c(1:9),nrow = 3,ncol = 3,byrow = TRUE)
int
int[2][1]
int[2,]
int[,3]
int[2]
int[2][2]
int[2][1]
int[2,1]
int[2,3]
a<-c(1,2,3,4,5)
a[c(T,F,T,T,F)]
v<-c(1,2,3,4,5,6,7,8)
a<-c(9,8,7,6,5,4,3,2)
v+a
v%%a
q<-c("shubham","arpita","nishka","gumjan","vaishali")b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali"),b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali")
b<-q[2:5]
q[c(2,1,3,4,5,6)]
z<-c("Tensor","Pytorch")
names(z) = c("Start",end)
z
names(z) = c("Start","end")
z
#name changing
z<-c("Tensor","Pytorch")
names(z) = c("end","start")
z
status <- factor(c("Student","Teacher","Student",
"Principal","Teacher","Student","Principal"))
status
#This will create the level of unique data which is redefined.
# create a factor
marital_status <- factor(c("married", "single", "single", "divorced", "married"))
marital_status
# print the marital_status factor
marital_status[1] <- "divorced"
marital_status[1]
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data
factor_data[-4]
factor_data <- "ABC"
factor_data
factor_data
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data[-4]
factor_data[4] <- "ABC"
print(factor_data)
factor_data[4] <- "ABC"
print(factor_data)
id <- 1:6
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122,119)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
mydata
mydata$id
mydata$gender
m <- write.csv(mydata,"f.csv")
m
l<-read.csv("f.csv")
l
!is.factor(mydata$gender)
g<-factor(gender)
cbind(mydata,g)
is.factor(g)
gender<-factor(gender)
mydata
is.factor(gender)
gender<-factor(mydata$gender)
mydata
gender<-factor(gender)
mydata
is.factor(mydata$gender)
mydata$gender<-factor(mydata$gender)
mydata
is.factor(mydata$gender)
barplot(mydata,height)
barplot(mydata$height)
barplot(mydata$gender)
barplot(mydata$weight)
edit(mydata)
a=readline("Enter the input: ")
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum
sum = function(5){
sum = function(5){
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum(5)
a=readline("Enter the input: ")
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum(a)
sum = function(){
for(i in 1:10){
b=i^2
print(b)
}
}
sum()
s <- function(a,b,c){
result = a*b+c
print(result)
}
s(5,3,11)
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
cat(a 'X'  i ' = 'a*i'\n')
cat(a 'X'  i ' = 'a*i)
t <- function(a){
for(i in 1:10){
cat(a "X"  i " = "a*i)
cat(a "X" i " = ",a*i)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i)
}
}
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i'\n')
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i,"\n")
}
}
t(5)
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(8)
t<-as.numeric(readline())
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(5)
area <- function(a){
print(3.14*a*a)
}
area(9)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2(a+b))
}
shape(4,5)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
cat("Area is : ",a*b,'\n')
#------------------
shape <- function(a,b){
cat("Area is : ",a*b,"\n")
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
repeat_times <- rep(c(1,2,3),times=3)
repeat_times
install.package('sqldf')
install.packages('sqldf')
file.choose()
d<-read.csv(file.choose("C:\\Users\\shubh\\Downloads\\diabetes.csv"))
View(d)
view(d)
d<-read.csv("C:\\Users\\shubh\\Downloads\\diabetes.csv")
d
view(d)
View(d)
library(sqldf)
sqldf('select * from diabetes.csv')
sqldf('select * from d')
sqldf('select * from d')
sqldf('select Pregnancies from d')
sqldf('select max(Pregnancies) from d')
library(dplyr)
sqldf('select max(Pregnancies) from d')
sqldf('select Pregnancies from d')
head(d,5)
tail(d,5)
names(d)
substr("abcdef",2,4)
nchar("abcd")
nchar("abcd ")
print(sin(90))
print(cos(3.14/2))
print(sin(3.14/2))
x="Hello world hello"
sub("ell","owe",x)
r = c(1,2,3,4,5)
sum(r)
r = c(1,2,3,4,5)
sum(r)
sum(r)
r = c(1,2,3,4,5)
sum(r)
a <- list(A = c(8,9,7,5),
B=data.frame(x=1:5,y = c(5,1,0,2,3)))
a
lapply(a,sum)
#tapply function
#tapply
result = data.frame(id = c(1,2,3,4) , name =c("John","Max","Tom","Joe"),
marks = seq(20,35,5), section = c("A","B","A","B")
)
store
result
id <- store$id
#tapply function
#tapply
store = data.frame(id = c(1,2,3,4) , name =c("John","Max","Tom","Joe"),
marks = seq(20,35,5), section = c("A","B","A","B")
)
store
id <- store$id
marks <- store$marks
section <- factor(store$section,
labels = c("Section A","Section B"))
section
mean_marks <- tapply(marks,section,mean)
mean_marks
id
sapply(1:4,sqrt)
out <- numeric(10)
for(i in 1:10){
out[i] <- i
}
out
List <- list(A = 1:5,B=6:20 , C=1)
sapply(List,length)
x<-c(1,2,3,NA,5,6)
x
y<-is.na(x)
x[!y]
id<-c(1,2,3,4,5,6)
temp<-c(25.8,34.2,54.3,NA,98.6,23.5)
mydata<-data.frame(id,temp)
mydata
m<-is.na(mydata)
m
n<-complete.cases(mydata)
n
n
install.packages('visdat')
#matrix
x<-matrix(seq(1:9),nrow=3,ncol=3)
x
dim(x)
matrix(diag(3,3,3))
m<-matrix(diag(3,3,3))
m
m<-diag(3,3,3)
m
rownames(m) = c("a","b","c")
colnames(m) = c(1,2,3)
m
m[1]
m[2]
m[2,]
m[,2]
m[1,2]
m[1,2] <- 3
m
rbind(m,c(9,9,9))
rownames(m) = c("a","b","c","d")
cbind(m,c(1,2,3,4))
cbind(m,c(1,2,3))
m
m
t(m)
m[1,2] <- 0
m
t(m)
#lists
n<-c("a","b","c","d")
a<-c(8,9,10,11)
data.frame(n,a)
d<-data.frame(n,a)
d
d$n
d$id <- c(1,2,3,4)
d
r<-rownames("r1","r2","r3","r4")
r<-rownames("r1","r2","r3")
r<-rownames(d,c("r1","r2","r3","r4"))
r
d
d
rownames(d,c("r1","r2","r3","r4"))
rownames(d)<-c("r1","r2","r3","r4")
d
subset(d,id)
subset(d,d$id)
subset(d,id>2)
library(dplyr)
read.csv("C:\Users\shubh\OneDrive\Desktop\Mental health.csv")
read.csv("C:\\Users\\shubh\\OneDrive\\Desktop\\Mental health.csv")
mydata<-read.csv("C:\\Users\\shubh\\OneDrive\\Desktop\\Mental health.csv")
mydata
View(mydata)
is.na(mydata)
is.nan(mydata)
mydata[!x]
x<-is.na(mydata)
x
y<-complete.cases(mydata)
y
mydata<-read.csv("C:\\Users\\shubh\\OneDrive\\Desktop\\Mental health.csv")
y<-complete.cases(mydata)
y
x<-is.na(mydata)
x
View(mydata)
edit(mydata)
x<-is.na(mydata)
x
y<-complete.cases(mydata)
y
mydata<-read.csv("C:\\Users\\shubh\\OneDrive\\Desktop\\Mental health.csv")
mydata
x<-is.na(mydata)
x
y<-complete.cases(mydata)
y
s<-sum(is.na(mydata))
s
vs.miss(mydata)
vis.miss(mydata)
library(visdat)
vis.miss(mydata)
vis_miss(mydata)
n<-na.exclude(mydata)
n
y<-complete.cases(mydata)
y
library(tidyr)
library(dplyr)
barplot(x)
barplot(x)
x<-c(1,2,3,5)
y<-c(3,5,6,2)
barplot(x)
barplot(x,namaes.arg=y)
barplot(x,names.arg=y)
barplot(x,y)
barplot(x)
m<-read.table('dara.txt',header=TRUE)
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Data_Manipulation")
m<-read.table('dara.txt',header=TRUE)
m
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/tidyr")
read.table('data.txt',head=TRUE)
my<-read.table('data.txt',head=TRUE)
my
n = 10
# creating a data frame
tidy_dataframe = data.frame(
S.No = c(1:n),
Group.1 = c(23, 345, 76, 212, 88,
199, 72, 35, 90, 265),
Group.2 = c(117, 89, 66, 334, 90,
101, 178, 233, 45, 200),
Group.3 = c(29, 101, 239, 289, 176,
320, 89, 109, 199, 56))
# print the elements of the data frame
tidy_dataframe
long <- tidy_dataframe %>%
gather(Group, Frequency,
Group.1:Group.3)
long <- tidy_dataframe %>%
gather(Group, Frequency,
Group.1:Group.3)
long
# use separate() function to make data wider
separate_data <- long %>%
separate(Group, c("Allotment",
"Number"))
# print the wider format
separate_data
