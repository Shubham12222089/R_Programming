}
sum(a)
sum = function(){
for(i in 1:10){
b=i^2
print(b)
}
}
sum()
s <- function(a,b,c){
result = a*b+c
print(result)
}
s(5,3,11)
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
cat(a 'X'  i ' = 'a*i'\n')
cat(a 'X'  i ' = 'a*i)
t <- function(a){
for(i in 1:10){
cat(a "X"  i " = "a*i)
cat(a "X" i " = ",a*i)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i)
}
}
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i'\n')
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i,"\n")
}
}
t(5)
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(8)
t<-as.numeric(readline())
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(5)
area <- function(a){
print(3.14*a*a)
}
area(9)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2(a+b))
}
shape(4,5)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
cat("Area is : ",a*b,'\n')
#------------------
shape <- function(a,b){
cat("Area is : ",a*b,"\n")
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
repeat_times <- rep(c(1,2,3),times=3)
repeat_times
install.package('sqldf')
install.packages('sqldf')
file.choose()
d<-read.csv(file.choose("C:\\Users\\shubh\\Downloads\\diabetes.csv"))
View(d)
view(d)
d<-read.csv("C:\\Users\\shubh\\Downloads\\diabetes.csv")
d
view(d)
View(d)
library(sqldf)
sqldf('select * from diabetes.csv')
sqldf('select * from d')
sqldf('select * from d')
sqldf('select Pregnancies from d')
sqldf('select max(Pregnancies) from d')
library(dplyr)
sqldf('select max(Pregnancies) from d')
sqldf('select Pregnancies from d')
head(d,5)
tail(d,5)
names(d)
substr("abcdef",2,4)
nchar("abcd")
nchar("abcd ")
print(sin(90))
print(cos(3.14/2))
print(sin(3.14/2))
x="Hello world hello"
sub("ell","owe",x)
r = c(1,2,3,4,5)
sum(r)
r = c(1,2,3,4,5)
sum(r)
sum(r)
r = c(1,2,3,4,5)
sum(r)
a <- list(A = c(8,9,7,5),
B=data.frame(x=1:5,y = c(5,1,0,2,3)))
a
lapply(a,sum)
#tapply function
#tapply
result = data.frame(id = c(1,2,3,4) , name =c("John","Max","Tom","Joe"),
marks = seq(20,35,5), section = c("A","B","A","B")
)
store
result
id <- store$id
#tapply function
#tapply
store = data.frame(id = c(1,2,3,4) , name =c("John","Max","Tom","Joe"),
marks = seq(20,35,5), section = c("A","B","A","B")
)
store
id <- store$id
marks <- store$marks
section <- factor(store$section,
labels = c("Section A","Section B"))
section
mean_marks <- tapply(marks,section,mean)
mean_marks
id
sapply(1:4,sqrt)
out <- numeric(10)
for(i in 1:10){
out[i] <- i
}
out
List <- list(A = 1:5,B=6:20 , C=1)
sapply(List,length)
x<-c(1,2,3,NA,5,6)
x
y<-is.na(x)
x[!y]
id<-c(1,2,3,4,5,6)
temp<-c(25.8,34.2,54.3,NA,98.6,23.5)
mydata<-data.frame(id,temp)
mydata
m<-is.na(mydata)
m
n<-complete.cases(mydata)
n
n
install.packages('visdat')
#matrix
x<-matrix(seq(1:9),nrow=3,ncol=3)
x
dim(x)
matrix(diag(3,3,3))
m<-matrix(diag(3,3,3))
m
m<-diag(3,3,3)
m
rownames(m) = c("a","b","c")
colnames(m) = c(1,2,3)
m
m[1]
m[2]
m[2,]
m[,2]
m[1,2]
m[1,2] <- 3
m
rbind(m,c(9,9,9))
rownames(m) = c("a","b","c","d")
cbind(m,c(1,2,3,4))
cbind(m,c(1,2,3))
m
m
t(m)
m[1,2] <- 0
m
t(m)
#lists
n<-c("a","b","c","d")
a<-c(8,9,10,11)
data.frame(n,a)
d<-data.frame(n,a)
d
d$n
d$id <- c(1,2,3,4)
d
r<-rownames("r1","r2","r3","r4")
r<-rownames("r1","r2","r3")
r<-rownames(d,c("r1","r2","r3","r4"))
r
d
d
rownames(d,c("r1","r2","r3","r4"))
rownames(d)<-c("r1","r2","r3","r4")
d
subset(d,id)
subset(d,d$id)
subset(d,id>2)
install.packages('shiny')
library(shiny)
library(shinydashboard)
library(shiny)
library(shinydashboard)
install.packages('shinydashboard')
library(shiny)
library(shinydashboard)
shinyUI(
dashboardPage(
dashboardHeader(title = "Demo shinydashboard - This is header",titlewidth = 500),
dashboardSidebar("This is the sidebar and can hace sidebar menu items")
dashboardBody("This is the body. Intoducing shiny dashboard package and demo
shinyUI(
dashboardPage(
dashboardHeader(title = "Demo shinydashboard - This is header",titlewidth = 500),
dashboardSidebar("This is the sidebar and can hace sidebar menu items")
dashboardBody("This is the body. Intoducing shiny dashboard package and demo
shinyUI(
dashboardPage(
dashboardHeader(title = "Demo shinydashboard - This is header",titlewidth = 500),
dashboardSidebar("This is the sidebar and can hace sidebar menu items")
dashboardBody("This is the body. Intoducing shiny dashboard package and demo
shinyUI(
dashboardPage(
dashboardHeader(title = "Demo shinydashboard - This is header",titlewidth = 500),
dashboardSidebar("This is the sidebar and can hace sidebar menu items"),
dashboardBody("This is the body. Intoducing shiny dashboard package and demo
of basic layout."
)
)
)
shinyUI(
dashboardPage(
dashboardHeader(title = "Demo shinydashboard - This is header",titlewidth = 500),
dashboardSidebar("This is the sidebar and can hace sidebar menu items"),
dashboardBody("This is the body. Intoducing shiny dashboard package and demo
of basic layout."
)
)
)
library(shiny)
shinyUI(
dashboardPage(
dashboardHeader(title = "Demo shinydashboard - This is header",titlewidth = 500),
dashboardSidebar("This is the sidebar and can hace sidebar menu items"),
dashboardBody("This is the body. Intoducing shiny dashboard package and demo
of basic layout."
)
)
)
library(shiny)
library(shinydashboard)
shinyUI(
dashboardPage(
dashboardHeader(title = "Demo shinydashboard - This is header",titlewidth = 500),
dashboardSidebar("This is the sidebar and can hace sidebar menu items"),
dashboardBody("This is the body. Intoducing shiny dashboard package and demo
of basic layout.")
)
)
shinyApp(ui=ui,server=server)
ui<-fluidPage(
titlePanel("This is a demo App"),
sidebarLayout(
sidebarPanel(
textInput("txtInput","Input the text to display"),
)
mainPanel(
ui<-fluidPage(
titlePanel("This is a demo App"),
sidebarLayout(
sidebarPanel(
textInput("txtInput","Input the text to display"),
),
mainPanel(
paste("You are entering.."),
textOutput("txtOutput")
)
)
)
server = shinyServer(function(input,output){
output$txtOutput<-renderText({
paste(input$txtInput)
})
})
shinyApp(ui=ui,server=server)
library(shiny); runApp('C:/Users/shubh/OneDrive/Desktop/Shiny_R/first.R')
mydata<-read.csv("C:\Users\shubh\Downloads\usagereport 4th April.csv")
mydata
mydata<-read.csv("C:\\Users\\shubh\\Downloads\\usagereport 4th April.csv")
mydata
sqldf('select * from mydata where External.Id=12222089')
library(sqldf)
sqldf('select * from mydata where External.Id=12222089')
sqldf('select * from mydata where External.Id="12222089"')
sqldf('select * from mydata where Name="Shubham Kumar Jha"')
sqldf('select * from mydata where Name="Shubham Kumar Jha"')
sqldf('select * from mydata where Name="Shubham Kumar Jha" and Email="shubham.12222089@lpu.in"')
t<-sqldf('select * from mydata where Name="Shubham Kumar Jha" and Email="shubham.12222089@lpu.in"')
View(t)
library(dplyr)
mydata<-read.csv('data.csv')
mydata
m <- select(mydata,Name,Age)
m
barplot(m$Age)
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Data_Visualisation")
m <- select(mydata,Name,Age)
m
barplot(m$Age)
i<-read.csv('output.csv')
i
barplot(i$marks)
barplot(mydata$Age)
m <- select(mydata,Name,Age)
mydata.head(10)
barplot(m,m$Age)
head(mydata,10)
m <- select(mydata,gender,dob)
m
barplot(m$Age)
barplot(m$gender)
barplot(m$children)
barplot(mydata$children)
barplot(m$children)
m <- select(mydata,gender,children)
m
barplot(m$children)
barplot(m$children)
mydata<-read.csv('practice.csv')
mydata
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
#type='l',
main='Month vs Revenue')
#line graph------------------
library(dplyr)
mydata<-read.csv('practice.csv')
mydata
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Data_Manipulation")
mydata<-read.csv('practice.csv')
mydata
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
#type='l',
main='Month vs Revenue')
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
type='l',
main='Month vs Revenue')
i<-read.csv('output.csv')
i
barplot(i$marks)
barplot(i$marks,col="orange")
barplot(i$marks,col="orange",xlab="name",ylab="marks")
barplot(i$marks,col="orange",xlab="name",ylab="marks",names.arg="marks")
barplot(i$marks,col="orange",xlab="name",ylab="marks",names.arg=marks)
barplot(i$marks,col="orange",xlab="name",ylab="marks",names.arg='marks')
mydata
mydata<-read.csv('output.csv')
barplot(mydata$marks,
xlab='marks',
horiz=TRUE,
ylab='id',
main='marks vs id',
col='blue')
barplot(mydata$marks,
xlab='marks',
horiz=TRUE,
ylab='id',
main='marks vs id',
col='blue',names.arg = 'id')
barplot(m$children)
barplot(i$marks,col="orange",xlab="name",ylab="marks",names.arg=marks)
barplot(i$marks,col="orange",xlab="name",ylab="marks")
hist(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='yellow',
main='Month vs Revenue')
mydata<-read.csv('practice.csv')
mydata
hist(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='yellow',
main='Month vs Revenue')
pie(mydata$M)
x<-c(12,23,47,10,56)
pie(v)
pie(x)
names(x) <- c("Algo","DS","Java","C","C++","Python")
x<-c(12,23,47,10,56,78)
pie(x)
names(x) <- c("Algo","DS","Java","C","C++","Python")
pie(x)
pie(x,main="Article")
pie3D(x)
install.packages('plotpix')
pie3D(x)
library(pieplot)
library(plotpix)
library(plotrix)
install.packages('plotrix')
library(plotrix)
pie3D(x)
pie3D(x,explode=0.2)
pie3D(x,explode=0.2,main="Pie")
pie3D(x,explode=0.2,main="Pie",ylab=c(1,2,3,4,5,6))
pie3D(x,explode=0.2,main="Pie",labels=c(1,2,3,4,5,6))
#scattered plot---------------------
mydata<-read.csv('practice.csv')
mydata
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
mydata$M,
main='Month vs Revenue',
pch=20)
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
mydata$M,
main='Month vs Revenue',
line=l,
pch=20)
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
mydata$M,
main='Month vs Revenue',
type=l,
pch=20)
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
mydata$M,
main='Month vs Revenue',
type='l',
pch=20)
plot(mydata$Revenue,
xlab='Month',
ylab='Revenue',
col='red',
mydata$M,
main='Month vs Revenue',
pch=20)
