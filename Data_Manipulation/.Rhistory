a<-c(1,2,3,4,5)
b<-c(10,20,30,40,50)
fac <- factor(a)
f<-factor(b)
fac
f
a<-c(1,2,3,4,5)
b<-c(10,20,30,40,50)
fac <- factor(a)
f<-factor(a,b)
f
c<-1:10
c
d<-21.3
print(as.integer(d))
l<-list(c(12,13,14,14),21.3,'jack')
l
id <- c(1,2,3,4)
name <- ('A','B','C','D')
#data frames
id <- c(1,2,3,4)
name <- ('A','B','C','D')
#data frames
id <- c(1,2,3,4)
name <- ("A","B","C","D")
marks <- (91,92,93,94)
#data frames
id <- c(1,2,3,4)
name <- ("ABC","BCD","CDE","DEF")
id <- c(1,2,3,4)
name <- c("ABC","BCD","CDE","DEF")
marks <- c(91,92,93,94)
data <- data.frame(id,name,marks)
data
d<-rbind(id=5,"EFG",95)
d
d<-c(5,"EFG",95)
rbind(data,d)
data
#indexing
data[3]
data[3,]
data[[1]][3]
data[[1,]][3]
data[[2]][3]
#edit function
m <- edit(data)
m
data
#diagonal matrix
mat <- matrix(c(1),nrow=3,ncol=3)
mat
int <- "Hello world"
int
int
print(int)
cat(int)
#diagonal matrix
mat <- matrix(c(1,1,1),nrow=3,ncol=3)
mat
#diagonal matrix
mat <- matrix(c(1:3),nrow=3,ncol=3)
mat
#diagonal matrix
mat <- diag(c(1),nrow=3,ncol=3)
mat
int <- matrix(c(1:9),nrow = 3,ncol = 3,byrow = TRUE)
int
int[3][1]
int[2][1]
data[3][1]
int[2,]
int[3]
int[,3]
int <- 2
#convert character to raw
raw_variable <- charToRaw(int)
int <- a
#convert character to raw
raw_variable <- charToRaw(int)
int <- "a"
#convert character to raw
raw_variable <- charToRaw(int)
d <- class(raw_variable)
d
e<-rawToChar(d)
e
int <- "a"
#convert character to raw
raw_variable <- charToRaw(int)
d <- class(raw_variable)
d
#convert raw to character
e<-rawToChar(d)
e<-rawToChar(int)
e
e<-rawToChar(raw_variable)
e
#raw daata
int <- "raw"
#convert character to raw
raw_variable <- charToRaw(int)
d <- class(raw_variable)
d
e<-rawToChar(raw_variable)
e
name <- "Shubham"
print(paste("My name is : ",name))
name <- "Shubham"
print(paste("My name is :",name))
name <- "Shubham"
print(paste0("My name is :",name))
#variables
x = 10
typeof(x)
mode(x)
storage.mode(x)
class(x)
is.integer(x)
is.numeric(x)
x<-as.integer(x)
x
class(x)
#sequential
x<-1:10
x
x*3
x
1:x-1
y<-10
1:y-1
2:y-1
z<-seq(10)
z
z<-seq(from = 1, to = 10)
z
#replicate function
x<-rep(1,timess=5)
x
#replicate function
x<-rep(1,times=5)
x
x<-3
if(x%%2==0){
print("even")
}else{
print("Odd")
}
for(i in 1:10){
print(i)
}
i<-1
while(i<=10){
print(i)
i=i+1
}
i<-1
repeat{
print(i)
if(i==3){
break
}
i=i+1
}
#missing data
x<-c(1,2,3,na,5,6)
#missing data
x<-c(1,2,3,NA,5,6)
x
is.na(x)
y<-is.na(x)
x[!y]
id<-(1,2,3,4,5,6)
temp<-(25.8,34.2,54.3,98.7,98.6,23.5)
id<-c(1,2,3,4,5,6)
temp<-c(25.8,34.2,54.3,98.7,98.6,23.5)
mydata<-data,frame(id,temp)
mydata<-data.frame(id,temp)
mydata
id<-c(1,2,3,4,5,6)
temp<-c(25.8,34.2,54.3,NA,98.6,23.5)
mydata<-data.frame(id,temp)
mydata
m<-is.na(mydata)
m
n<-complete.cases(mydata)
n
#importing data from text file
mydata<-read.table('file.txt')
#importing data from text file
mydata<-read.table('file.txt')
#importing data from text file
mydata<-read.table('file.txt')
install.packages
()
install.packages("tidyverse")
library(tidyverse)
x<-3
class(x)
typeof(x)
x<-a
x<-'a'
class(x)
typeof(x)
x<-0
class(x)
typeof(x)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table0.txt')
df
mydata <- filter(df,V2>30)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table0.txt',header=TRUE)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table0.txt')
df
mydata <- filter(df,V2>30)
z<-4:10
z
z<--4:-10
z
z<-4:-10
z
z<-seq(1,10,2)
z
mydata <- filter(df,V3>30)
mydata
i <-seq(1,10,length=5)
i
d<-read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt')
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 1,
quote ="/")
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 1,
)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/")
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/"
quote="a")
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/",
quote="a")
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 1,
quote ="/"
)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T
)
v<-c(1,2,3,4,5,6,7,8)
v[0]
v[1]
v[4]
int <- matrix(c(1:9),nrow = 3,ncol = 3,byrow = TRUE)
int
int[2][1]
int[2,]
int[,3]
int[2]
int[2][2]
int[2][1]
int[2,1]
int[2,3]
a<-c(1,2,3,4,5)
a[c(T,F,T,T,F)]
v<-c(1,2,3,4,5,6,7,8)
a<-c(9,8,7,6,5,4,3,2)
v+a
v%%a
q<-c("shubham","arpita","nishka","gumjan","vaishali")b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali"),b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali")
b<-q[2:5]
q[c(2,1,3,4,5,6)]
z<-c("Tensor","Pytorch")
names(z) = c("Start",end)
z
names(z) = c("Start","end")
z
#name changing
z<-c("Tensor","Pytorch")
names(z) = c("end","start")
z
status <- factor(c("Student","Teacher","Student",
"Principal","Teacher","Student","Principal"))
status
#This will create the level of unique data which is redefined.
# create a factor
marital_status <- factor(c("married", "single", "single", "divorced", "married"))
marital_status
# print the marital_status factor
marital_status[1] <- "divorced"
marital_status[1]
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data
factor_data[-4]
factor_data <- "ABC"
factor_data
factor_data
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data[-4]
factor_data[4] <- "ABC"
print(factor_data)
factor_data[4] <- "ABC"
print(factor_data)
id <- 1:6
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122,119)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
mydata
mydata$id
mydata$gender
m <- write.csv(mydata,"f.csv")
m
l<-read.csv("f.csv")
l
!is.factor(mydata$gender)
g<-factor(gender)
cbind(mydata,g)
is.factor(g)
gender<-factor(gender)
mydata
is.factor(gender)
gender<-factor(mydata$gender)
mydata
gender<-factor(gender)
mydata
is.factor(mydata$gender)
mydata$gender<-factor(mydata$gender)
mydata
is.factor(mydata$gender)
barplot(mydata,height)
barplot(mydata$height)
barplot(mydata$gender)
barplot(mydata$weight)
edit(mydata)
TRUE + TRUE
class(x)
x=30.0
class(x)
x="30"
class(x)
x='3'
class(x)
x=3.00032
class(x)
mode(x)
x="3"
class(x)
x="3"
class(x)
as.integer(x)
class(x)
x=3.0
class(x)
as.integer(x)
class(x)
is.integer((x)
x=3.0
class(x)
as.integer(x)
y<-is.integer(x)
y
x<-'3'
class(x)
y<-as.integer(x)
class(y)
x<-3.90
class(x)
y<-as.integer(x)
y
x<-rep(1,times=5)
x
m<-matrix(c(1:9),nrow=3,ncol=3)
m
rownames(m) <- c('A','B','C')
colnames(m) <- c('X','Y','Z')
m
solve(m)
rowsums(m)
rowSums(m)
rowMeans(m)
apply(m,1,sum)
apply(m,0,sum)
apply(m,2,sum)
id <- c(1,2,3)
name <- c("a","b","c")
age <- c(11,12,13)
mydata<-data.frame(id,name,age)
mydata
m<-rbind(mydata,data.frame(id=4,name="d",age=14))
m
report <-subset(m,age>12)
report
x<-c(10,4,NA,7,15)
is.na(x)
y<-complete.cases(x)
y
x[xNA,]
x[x NA,]
x[y]
mydata<-read.csv("output.csv")
mydata<-read.csv("output.csv")
cwd()
setwd()
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Data_Manipulation")
mydata<-read.csv("output.csv")
mydata
mydata<-read.csv("output.csv")
mydata
m<-read.table("https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt")
url.show("https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt")
m<-read.table("https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt")
m
m<-read.table("https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt")
library(dplyr)
mydata<-read.csv("outpur.csv")
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Data_Manipulation")
library(dplyr)
mydata<-read.csv("outpur.csv")
mydata<-read.csv("output.csv")
mydata
names(mydata)
m<-group_by(mydata,marks=desc)
m
mi<-group_by(mydata,marks=desc)
mi<-group_by(mydata,desc(marks))
mi
mi<-group_by(mydata,name)
mi
mydata<-read.csv("output.csv")
mydata
names(mydata)
mi<-group_by(mydata,name)
mi
n<-select(mydata,name,marks)
n
o<-filter(mydata,marks>3)
o
a<-arrange(mydata,desc(marks))
a
head(mydata,3)
p<-mutate(mydata,mul=marks*X)
p
arrange(mydata,desc(marks)%>%select(id))
arrange(mydata,desc(marks))%>%select(id)
mydata<-read.csv("output.csv")
mydata
barplot(mydata$marks)
barplot(mydata$marks,
xlab='marks',ylab='id',
main='marks Vs id')
barplot(mydata$marks,
xlab='marks',ylab='id',
main='marks Vs id',horizonta=TRUE)
barplot(mydata$marks,
horizonta=TRUE)
barplot(mydata$marks,
horizontal=TRUE)
barplot(mydata$marks,
horiz=TRUE)
barplot(mydata$marks,
horiz=TRUE,col="Blue")
