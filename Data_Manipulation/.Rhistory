header = T,
skip = 1,
quote ="/"
)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T
)
v<-c(1,2,3,4,5,6,7,8)
v[0]
v[1]
v[4]
int <- matrix(c(1:9),nrow = 3,ncol = 3,byrow = TRUE)
int
int[2][1]
int[2,]
int[,3]
int[2]
int[2][2]
int[2][1]
int[2,1]
int[2,3]
a<-c(1,2,3,4,5)
a[c(T,F,T,T,F)]
v<-c(1,2,3,4,5,6,7,8)
a<-c(9,8,7,6,5,4,3,2)
v+a
v%%a
q<-c("shubham","arpita","nishka","gumjan","vaishali")b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali"),b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali")
b<-q[2:5]
q[c(2,1,3,4,5,6)]
z<-c("Tensor","Pytorch")
names(z) = c("Start",end)
z
names(z) = c("Start","end")
z
#name changing
z<-c("Tensor","Pytorch")
names(z) = c("end","start")
z
status <- factor(c("Student","Teacher","Student",
"Principal","Teacher","Student","Principal"))
status
#This will create the level of unique data which is redefined.
# create a factor
marital_status <- factor(c("married", "single", "single", "divorced", "married"))
marital_status
# print the marital_status factor
marital_status[1] <- "divorced"
marital_status[1]
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data
factor_data[-4]
factor_data <- "ABC"
factor_data
factor_data
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data[-4]
factor_data[4] <- "ABC"
print(factor_data)
factor_data[4] <- "ABC"
print(factor_data)
id <- 1:6
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122,119)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
mydata
mydata$id
mydata$gender
m <- write.csv(mydata,"f.csv")
m
l<-read.csv("f.csv")
l
!is.factor(mydata$gender)
g<-factor(gender)
cbind(mydata,g)
is.factor(g)
gender<-factor(gender)
mydata
is.factor(gender)
gender<-factor(mydata$gender)
mydata
gender<-factor(gender)
mydata
is.factor(mydata$gender)
mydata$gender<-factor(mydata$gender)
mydata
is.factor(mydata$gender)
barplot(mydata,height)
barplot(mydata$height)
barplot(mydata$gender)
barplot(mydata$weight)
edit(mydata)
a=readline("Enter the input: ")
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum
sum = function(5){
sum = function(5){
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum(5)
a=readline("Enter the input: ")
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum(a)
sum = function(){
for(i in 1:10){
b=i^2
print(b)
}
}
sum()
s <- function(a,b,c){
result = a*b+c
print(result)
}
s(5,3,11)
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
cat(a 'X'  i ' = 'a*i'\n')
cat(a 'X'  i ' = 'a*i)
t <- function(a){
for(i in 1:10){
cat(a "X"  i " = "a*i)
cat(a "X" i " = ",a*i)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i)
}
}
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i'\n')
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i,"\n")
}
}
t(5)
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(8)
t<-as.numeric(readline())
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(5)
area <- function(a){
print(3.14*a*a)
}
area(9)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2(a+b))
}
shape(4,5)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
cat("Area is : ",a*b,'\n')
#------------------
shape <- function(a,b){
cat("Area is : ",a*b,"\n")
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
repeat_times <- rep(c(1,2,3),times=3)
repeat_times
m<-read.csv('diabetes.csv')
setwd("C:/Users/shubh/OneDrive/Desktop")
m<-read.csv('diabetes.csv')
m
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Data_Manipulation")
m<-read.csv('diabetes.csv')
m
head <- head(m,3)
head
tail <- tail(m,10)
tail
m<-read.csv('diabetes.csv')
m
library(dplyr)
s <- select(Pregnancies)
s <- select(m,Pregnancies)
s
s <- select(max(m,Pregnancies))
s <- select(max(m,Pregnancies))
s
head
head <- head(m,10)
head
head <- head(m,10)
head
tail <- tail(m,10)
tail
maxi <- max(m$Pregnancies)
maxi
m
maxi <- max(m$BloodPressure)
maxi
maxi <- max(m$Pregnancies)
maxi
maxi <- max(m$Pregnancies,m$Glucose,m$BloodPressure,m$SkinThickness)
maxi
max_preganancies <- max(m$Pregnancies)
max_preganancies
max_preganancies <- max(m$Pregnancies)
max_preganancies
max_glucose <- max(m$Glucose)
max_glucose
max_BloodPressure <- max(m$BloodPressure)
max_BloodPressure
max_SkinThick <-max(m$SkinThickness)
max_SkinThick
max_insulin <- max(m$Insulin)
max_insulin
max_bmi <- max(m$BMI)
max_bmi
max_diabetesped <- max(m$DiabetesPedigreeFunction)
max_diabetesped
max_age <- max(m$Age)
max_age
max_out <- max(m$Outcome)
max_out
d <- data.frames(m,max_preganancies)
d <- data.frames(max(m$preganancies))
max_preganancies <- max(m$Pregnancies)
max_preganancies
max_glucose <- max(m$Glucose)
max_glucose
max_BloodPressure <- max(m$BloodPressure)
max_BloodPressure
max_SkinThick <-max(m$SkinThickness)
max_SkinThick
max_insulin <- max(m$Insulin)
max_insulin
max_bmi <- max(m$BMI)
max_bmi
max_diabetesped <- max(m$DiabetesPedigreeFunction)
max_diabetesped
max_age <- max(m$Age)
max_age
max_out <- max(m$Outcome)
max_out
min_preganancies <- min(m$Pregnancies)
min_preganancies
min_glucose <- min(m$Glucose)
min_glucose
min_BloodPressure <- min(m$BloodPressure)
min_BloodPressure
min_SkinThick <-min(m$SkinThickness)
min_SkinThick
min_insulin <- min(m$Insulin)
min_insulin
min_bmi <- min(m$BMI)
min_bmi
min_diabetesped <- min(m$DiabetesPedigreeFunction)
min_diabetesped
min_age <- min(m$Age)
min_age
min_out <- min(m$Outcome)
min_out
min_preganancies <- min(m$Pregnancies)
min_preganancies
min_glucose <- min(m$Glucose)
min_glucose
min_BloodPressure <- min(m$BloodPressure)
min_BloodPressure
min_SkinThick <-min(m$SkinThickness)
min_SkinThick
min_insulin <- min(m$Insulin)
min_insulin
min_bmi <- min(m$BMI)
min_bmi
min_diabetesped <- min(m$DiabetesPedigreeFunction)
min_diabetesped
min_age <- min(m$Age)
min_age
min_out <- min(m$Outcome)
min_out
mean_preganancies <- mean(m$Pregnancies)
mean_preganancies
mean_glucose <- mean(m$Glucose)
mean_glucose
mean_BloodPressure <- mean(m$BloodPressure)
mean_BloodPressure
mean_SkinThick <-mean(m$SkinThickness)
mean_SkinThick
mean_insulin <- mean(m$Insulin)
mean_insulin
mean_bmi <- mean(m$BMI)
mean_bmi
mean_diabetesped <- mean(m$DiabetesPedigreeFunction)
mean_diabetesped
mean_age <- mean(m$Age)
mean_age
mean_out <- mean(m$Outcome)
mean_out
med_preganancies <- median(m$Pregnancies)
med_preganancies
med_glucose <- median(m$Glucose)
med_glucose
med_BloodPressure <- median(m$BloodPressure)
med_BloodPressure
med_SkinThick <-median(m$SkinThickness)
med_SkinThick
med_insulin <- median(m$Insulin)
med_insulin
med_bmi <- median(m$BMI)
med_bmi
med_diabetesped <- median(m$DiabetesPedigreeFunction)
med_diabetesped
med_age <- median(m$Age)
med_age
med_out <- median(m$Outcome)
med_out
ncol(m)
nrow(m)
ncol(m)
nrow(m)
v <- c("Pregnancies","glucose","BloodPressure","Skin thick","Insulin","Bmi","DiabetesPEdigree"
,"Age","Outcome")
max1 <- c(max_preganancies,max_glucose,max_BloodPressure,max_SkinThick,max_insulin,max_bmi,max_diabetesped,
max_age,max_out)
d<-data.frame(v,max1)
d
Datas <- c("Pregnancies","glucose","BloodPressure","Skin thick","Insulin","Bmi","DiabetesPEdigree"
,"Age","Outcome")
max <- c(max_preganancies,max_glucose,max_BloodPressure,max_SkinThick,max_insulin,max_bmi,max_diabetesped,
max_age,max_out)
min <- c(min_preganancies,min_glucose,min_BloodPressure,min_SkinThick,min_insulin,min_bmi,min_diabetesped,
min_age,min_out)
mean <- c(mean_preganancies,mean_glucose,mean_BloodPressure,mean_SkinThick,mean_insulin,mean_bmi,mean_diabetesped,
mean_age,mean_out)
median <- c(med_preganancies,med_glucose,med_BloodPressure,med_SkinThick,med_insulin,med_bmi,med_diabetesped,
med_age,med_out)
data <- data.frame(Datas,max,min,mean,median)
data
n <-read.csv('Prostate_cancer.csv')
n
head <- head(n,10)
head
tail <- tail(n,10)
tail
head <- head(n,10)
head
tail <- tail(n,10)
tail
Datas<-c("ID","diagnosis_result","radius","Texture","perimeter","area","smoothness",
"compactness","Symmetry","fractical")
Max <- c(max(n$id),max(n$diagnosis_result),max(n$radius),max(n$texture),max(n$perimeter),
max(n$area),max(n$smoothness),max(n$compactness),max(n$symmetry),max(n$fractal_dimension))
Min <-c(min(n$id),min(n$diagnosis_result),min(n$radius),min(n$texture),min(n$perimeter),
min(n$area),min(n$smoothness),min(n$compactness),min(n$symmetry),min(n$fractal_dimension))
Mean <- c(mean(n$id),mean(n$diagnosis_result),mean(n$radius),mean(n$texture),mean(n$perimeter),
mean(n$area),mean(n$smoothness),mean(n$compactness),mean(n$symmetry),mean(n$fractal_dimension))
Median <- c(median(n$id),median(n$diagnosis_result),median(n$radius),median(n$texture),median(n$perimeter),
median(n$area),median(n$smoothness),median(n$compactness),median(n$symmetry),median(n$fractal_dimension))
mydata <- data.frame(Datas,MAx,Min,Mean,Median)
Datas<-c("ID","diagnosis_result","radius","Texture","perimeter","area","smoothness",
"compactness","Symmetry","fractical")
Max <- c(max(n$id),max(n$diagnosis_result),max(n$radius),max(n$texture),max(n$perimeter),
max(n$area),max(n$smoothness),max(n$compactness),max(n$symmetry),max(n$fractal_dimension))
Min <-c(min(n$id),min(n$diagnosis_result),min(n$radius),min(n$texture),min(n$perimeter),
min(n$area),min(n$smoothness),min(n$compactness),min(n$symmetry),min(n$fractal_dimension))
Mean <- c(mean(n$id),mean(n$diagnosis_result),mean(n$radius),mean(n$texture),mean(n$perimeter),
mean(n$area),mean(n$smoothness),mean(n$compactness),mean(n$symmetry),mean(n$fractal_dimension))
Median <- c(median(n$id),median(n$diagnosis_result),median(n$radius),median(n$texture),median(n$perimeter),
median(n$area),median(n$smoothness),median(n$compactness),median(n$symmetry),median(n$fractal_dimension))
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Data_Manipulation")
Datas<-c("ID","diagnosis_result","radius","Texture","perimeter","area","smoothness",
"compactness","Symmetry","fractical")
Max <- c(max(n$id),max(n$diagnosis_result),max(n$radius),max(n$texture),max(n$perimeter),
max(n$area),max(n$smoothness),max(n$compactness),max(n$symmetry),max(n$fractal_dimension))
Min <-c(min(n$id),min(n$diagnosis_result),min(n$radius),min(n$texture),min(n$perimeter),
min(n$area),min(n$smoothness),min(n$compactness),min(n$symmetry),min(n$fractal_dimension))
Mean <- c(mean(n$id),mean(n$diagnosis_result),mean(n$radius),mean(n$texture),mean(n$perimeter),
mean(n$area),mean(n$smoothness),mean(n$compactness),mean(n$symmetry),mean(n$fractal_dimension))
Mean <- c(mean(n$id),X,mean(n$radius),mean(n$texture),mean(n$perimeter),
mean(n$area),mean(n$smoothness),mean(n$compactness),mean(n$symmetry),mean(n$fractal_dimension))
Mean <- c(mean(n$id),"X",mean(n$radius),mean(n$texture),mean(n$perimeter),
mean(n$area),mean(n$smoothness),mean(n$compactness),mean(n$symmetry),mean(n$fractal_dimension))
Median <- c(median(n$id),"X",median(n$radius),median(n$texture),median(n$perimeter),
median(n$area),median(n$smoothness),median(n$compactness),median(n$symmetry),median(n$fractal_dimension))
mydata <- data.frame(Datas,MAx,Min,Mean,Median)
mydata <- data.frame(Datas,Max,Min,Mean,Median)
mydata
Max <- c(max(n$id),"X",max(n$radius),max(n$texture),max(n$perimeter),
max(n$area),max(n$smoothness),max(n$compactness),max(n$symmetry),max(n$fractal_dimension))
Min <-c(min(n$id),"X",min(n$radius),min(n$texture),min(n$perimeter),
min(n$area),min(n$smoothness),min(n$compactness),min(n$symmetry),min(n$fractal_dimension))
Mean <- c(mean(n$id),"X",mean(n$radius),mean(n$texture),mean(n$perimeter),
mean(n$area),mean(n$smoothness),mean(n$compactness),mean(n$symmetry),mean(n$fractal_dimension))
Median <- c(median(n$id),"X",median(n$radius),median(n$texture),median(n$perimeter),
median(n$area),median(n$smoothness),median(n$compactness),median(n$symmetry),median(n$fractal_dimension))
mydata <- data.frame(Datas,Max,Min,Mean,Median)
mydata
n$Age <- c(1:100)
Age
n$Age <- c(1:100)
Age
n$Age
n
n$texture = NULL
n
nrow(n)
ncol(n)
