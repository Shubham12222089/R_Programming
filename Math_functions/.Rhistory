#diagonal matrix
mat <- diag(c(1),nrow=3,ncol=3)
mat
int <- matrix(c(1:9),nrow = 3,ncol = 3,byrow = TRUE)
int
int[3][1]
int[2][1]
data[3][1]
int[2,]
int[3]
int[,3]
int <- 2
#convert character to raw
raw_variable <- charToRaw(int)
int <- a
#convert character to raw
raw_variable <- charToRaw(int)
int <- "a"
#convert character to raw
raw_variable <- charToRaw(int)
d <- class(raw_variable)
d
e<-rawToChar(d)
e
int <- "a"
#convert character to raw
raw_variable <- charToRaw(int)
d <- class(raw_variable)
d
#convert raw to character
e<-rawToChar(d)
e<-rawToChar(int)
e
e<-rawToChar(raw_variable)
e
#raw daata
int <- "raw"
#convert character to raw
raw_variable <- charToRaw(int)
d <- class(raw_variable)
d
e<-rawToChar(raw_variable)
e
name <- "Shubham"
print(paste("My name is : ",name))
name <- "Shubham"
print(paste("My name is :",name))
name <- "Shubham"
print(paste0("My name is :",name))
#variables
x = 10
typeof(x)
mode(x)
storage.mode(x)
class(x)
is.integer(x)
is.numeric(x)
x<-as.integer(x)
x
class(x)
#sequential
x<-1:10
x
x*3
x
1:x-1
y<-10
1:y-1
2:y-1
z<-seq(10)
z
z<-seq(from = 1, to = 10)
z
#replicate function
x<-rep(1,timess=5)
x
#replicate function
x<-rep(1,times=5)
x
x<-3
if(x%%2==0){
print("even")
}else{
print("Odd")
}
for(i in 1:10){
print(i)
}
i<-1
while(i<=10){
print(i)
i=i+1
}
i<-1
repeat{
print(i)
if(i==3){
break
}
i=i+1
}
#missing data
x<-c(1,2,3,na,5,6)
#missing data
x<-c(1,2,3,NA,5,6)
x
is.na(x)
y<-is.na(x)
x[!y]
id<-(1,2,3,4,5,6)
temp<-(25.8,34.2,54.3,98.7,98.6,23.5)
id<-c(1,2,3,4,5,6)
temp<-c(25.8,34.2,54.3,98.7,98.6,23.5)
mydata<-data,frame(id,temp)
mydata<-data.frame(id,temp)
mydata
id<-c(1,2,3,4,5,6)
temp<-c(25.8,34.2,54.3,NA,98.6,23.5)
mydata<-data.frame(id,temp)
mydata
m<-is.na(mydata)
m
n<-complete.cases(mydata)
n
#importing data from text file
mydata<-read.table('file.txt')
#importing data from text file
mydata<-read.table('file.txt')
#importing data from text file
mydata<-read.table('file.txt')
install.packages
()
install.packages("tidyverse")
library(tidyverse)
x<-3
class(x)
typeof(x)
x<-a
x<-'a'
class(x)
typeof(x)
x<-0
class(x)
typeof(x)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table0.txt')
df
mydata <- filter(df,V2>30)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table0.txt',header=TRUE)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table0.txt')
df
mydata <- filter(df,V2>30)
z<-4:10
z
z<--4:-10
z
z<-4:-10
z
z<-seq(1,10,2)
z
mydata <- filter(df,V3>30)
mydata
i <-seq(1,10,length=5)
i
d<-read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt')
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 1,
quote ="/")
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 1,
)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/")
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/"
quote="a")
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 2,
quote ="/",
quote="a")
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table2.txt',
header = T,
skip = 1,
quote ="/"
)
df
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
skip = 1,
quote =c("--","*","**")
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T,
)
df <- read.table('https://www.r-exercises.com/wp-content/uploads/2015/12/Table3.txt',
header = T
)
v<-c(1,2,3,4,5,6,7,8)
v[0]
v[1]
v[4]
int <- matrix(c(1:9),nrow = 3,ncol = 3,byrow = TRUE)
int
int[2][1]
int[2,]
int[,3]
int[2]
int[2][2]
int[2][1]
int[2,1]
int[2,3]
a<-c(1,2,3,4,5)
a[c(T,F,T,T,F)]
v<-c(1,2,3,4,5,6,7,8)
a<-c(9,8,7,6,5,4,3,2)
v+a
v%%a
q<-c("shubham","arpita","nishka","gumjan","vaishali")b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali"),b<-q[2:5]
q<-c("shubham","arpita","nishka","gumjan","vaishali")
b<-q[2:5]
q[c(2,1,3,4,5,6)]
z<-c("Tensor","Pytorch")
names(z) = c("Start",end)
z
names(z) = c("Start","end")
z
#name changing
z<-c("Tensor","Pytorch")
names(z) = c("end","start")
z
status <- factor(c("Student","Teacher","Student",
"Principal","Teacher","Student","Principal"))
status
#This will create the level of unique data which is redefined.
# create a factor
marital_status <- factor(c("married", "single", "single", "divorced", "married"))
marital_status
# print the marital_status factor
marital_status[1] <- "divorced"
marital_status[1]
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data
factor_data[-4]
factor_data <- "ABC"
factor_data
factor_data
data<-c("Shubham","Nishka","Arpita","Nihska","Shubham","Sumit",
"Shubham","Arpita","Sumit")
data
is.factor(data)
factor_data <- factor(data)
factor_data
is.factor(factor_data)
factor_data[-4]
factor_data[4] <- "ABC"
print(factor_data)
factor_data[4] <- "ABC"
print(factor_data)
id <- 1:6
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
id <- 1:7
height<-c(132,162,152,166,147,122,119)
weight <- c(40,49,48,40,67,52,53)
gender<-c("m","m","f","f","m","f","m")
mydata <- data.frame(id,height,weight,gender)
mydata
mydata$id
mydata$gender
m <- write.csv(mydata,"f.csv")
m
l<-read.csv("f.csv")
l
!is.factor(mydata$gender)
g<-factor(gender)
cbind(mydata,g)
is.factor(g)
gender<-factor(gender)
mydata
is.factor(gender)
gender<-factor(mydata$gender)
mydata
gender<-factor(gender)
mydata
is.factor(mydata$gender)
mydata$gender<-factor(mydata$gender)
mydata
is.factor(mydata$gender)
barplot(mydata,height)
barplot(mydata$height)
barplot(mydata$gender)
barplot(mydata$weight)
edit(mydata)
a=readline("Enter the input: ")
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum
sum = function(5){
sum = function(5){
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum(5)
a=readline("Enter the input: ")
sum = function(a){
for(i in 1:a){
b=i^2
print(b)
}
}
sum(a)
sum = function(){
for(i in 1:10){
b=i^2
print(b)
}
}
sum()
s <- function(a,b,c){
result = a*b+c
print(result)
}
s(5,3,11)
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
t <- function(a){
for(i in 1:10){
cat(a " X " i " = "a*i'\n')
cat(a 'X'  i ' = 'a*i'\n')
cat(a 'X'  i ' = 'a*i)
t <- function(a){
for(i in 1:10){
cat(a "X"  i " = "a*i)
cat(a "X" i " = ",a*i)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i)
}
}
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i'\n')
t(5)
t <- function(a){
for(i in 1:10){
cat(a,"X",i," = ",a*i,"\n")
}
}
t(5)
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%2==0){
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(8)
t<-as.numeric(readline())
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
t<-as.numeric(readline("Enter the number: "))
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o = function(a){
if(a%%2==0){
print("Even")
}else{
print("Odd")
}
}
e_o(5)
area <- function(a){
print(3.14*a*a)
}
area(9)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2(a+b))
}
shape(4,5)
#------------------
shape <- function(a,b){
cat("Area is : ",a*b)
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
cat("Area is : ",a*b,'\n')
#------------------
shape <- function(a,b){
cat("Area is : ",a*b,"\n")
cat("Perimeter is : ",2*(a+b))
}
shape(4,5)
repeat_times <- rep(c(1,2,3),times=3)
repeat_times
install.package('sqldf')
install.packages('sqldf')
file.choose()
d<-read.csv(file.choose("C:\\Users\\shubh\\Downloads\\diabetes.csv"))
View(d)
view(d)
d<-read.csv("C:\\Users\\shubh\\Downloads\\diabetes.csv")
d
view(d)
View(d)
library(sqldf)
sqldf('select * from diabetes.csv')
sqldf('select * from d')
sqldf('select * from d')
sqldf('select Pregnancies from d')
sqldf('select max(Pregnancies) from d')
library(dplyr)
sqldf('select max(Pregnancies) from d')
sqldf('select Pregnancies from d')
head(d,5)
tail(d,5)
names(d)
substr("abcdef",2,4)
nchar("abcd")
nchar("abcd ")
print(sin(90))
print(cos(3.14/2))
print(sin(3.14/2))
x="Hello world hello"
sub("ell","owe",x)
d <- c(1:4)
d
sum(d)
d <- c(1:4)
d
sum(d)
setwd("C:/Users/shubh/OneDrive/Desktop/R/R programming/Math_functions")
d <- c(1:4)
d
sum(d)
d <- c(1:4)
d
sum(d)
lapply(a,sum)
a <- list(A = c(8,9,7,5),
B=data.frame(x=1:5,y = c(5,1,0,2,3)))
a
lapply(a,sum)
